--- etc/init.d/rc.old	2021-02-23 10:22:41.914228743 +0100
+++ etc/init.d/rc	2021-02-23 11:37:33.668284555 +0100
@@ -34,6 +34,38 @@
     fi
 }

+script_sleep() {
+  if ! (( $1 )); then
+    echo "Invalid sleep duration $1"
+    return
+  fi
+  while [ $timeout -gt 0 ]; do
+    sleep 1;
+    timeout=$[$timeout - 1];
+    devmem 0xff500000 32 0xb007aa01
+  done
+}
+
+pre_startup() {
+  local F=$(basename $(readlink -f $1))
+  if [ -f /tmp/init/$F.sleep.pre ]; then
+    read timeout < /tmp/init/$F.sleep.pre
+    script_sleep $timeout
+  fi
+
+  if [ -f /tmp/init/$F.skip ]; then
+    return 1
+  fi
+}
+
+post_startup() {
+  local F=$(basename $(readlink -f $1))
+  if [ -f /tmp/init/$F.sleep.post ]; then
+    read timeout < /tmp/init/$F.sleep.post
+    script_sleep $timeout
+  fi
+}
+

 #
 # Start script or program.
@@ -41,6 +73,17 @@
 startup() {
   # Handle verbosity
   [ "$VERBOSE" = very ] && echo "INIT: Running $@..."
+  case "$2" in
+  	start)
+		# poke boot progress status indicator
+		devmem 0xff500000 32 0xb007aa01
+		if [[ "$1" =~ S[5-9].* ]]; then
+			pre_startup "$1" || return 0
+		fi
+		;;
+	*)
+		: ;;
+  esac

   case "$1" in
 	*.sh)
@@ -56,6 +99,8 @@
 		"$@"
 		;;
   esac
+
+  [[ "$1" =~ S[5-9].* ]] && post_startup "$1"
   startup_progress
 }

@@ -68,6 +113,9 @@
   # Limit stack size for startup scripts
   [ "$STACK_SIZE" == "" ] || ulimit -S -s $STACK_SIZE

+  # Limit core size for startup scripts and their children
+  [ "$CORE_SIZE" == "" ] || ulimit -c $CORE_SIZE
+
   # Now find out what the current and what the previous runlevel are.

   runlevel=$RUNLEVEL
