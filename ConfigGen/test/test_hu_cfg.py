#!/usr/bin/env python2.7

import os, sys
import json, argparse
import logging, inspect
from pprint import pprint


current_dir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parent_dir = os.path.dirname(current_dir)
sys.path.insert(0, parent_dir)
from hu_cfg_gen import HUCfgGen

logger = logging.getLogger("test_hu_cfg")
logger.setLevel(logging.INFO)

""" Test file that parse combined json file and print out
hu config, and used for for comparing the output from c file using
generated c,h struct
"""

def print_HostUnits(HostUnits):
    print("HostUnits: 0x%x" % HostUnits["hu_en"])
    print("")

def print_HostUnit(HostUnit):
    for i, l in enumerate(HostUnit):
        index = l["_args"]
    	if index == ['all']:
    		continue
        ctl_en = l["ctl_en"]
        # The file test_hu_cfg_c_out generated by test_hu_cfg.c restricts
        # prints only upto 4 HUs
        if index[0] < 4:
            print("HostUnit[%d].ctl_en: 0x%x" % (index[0], ctl_en))

    print("")

def _test_hu_cfg(input_dir, output_dir):
    hu_cfg_gen = HUCfgGen(input_dir, output_dir)
    hu_cfg_json = hu_cfg_gen.generate_config()

    HuInterface = hu_cfg_json["HuInterface"]
    HostUnits = HuInterface.get("HostUnits")
    HostUnit = HuInterface.get("HostUnit")

    print_HostUnits(HostUnits)
    print_HostUnit(HostUnit)
    #pprint(HostUnits)
    #pprint(HostUnit)


def Usage():
    sys.stderr.write('test_hu_cfg.py: usage: [-c json cfg output file]')

def main():
    logger.debug("test hu_cfg")
def _dir_path(path):
    if os.path.isdir(path):
        return path
    else:
        raise argparse.ArgumentTypeError('Directory: {} is not a valid path!'.format(path))

def main():
    arg_parser = argparse.ArgumentParser(
        description="HU config file processing and auto generate code")

    arg_parser.add_argument("--in-dir", required=True, nargs=1,
                            type=_dir_path, help="input config source directory path")

    arg_parser.add_argument("--out-dir", required=True, nargs=1, type=_dir_path, help="output dir path")

    args = arg_parser.parse_args()

    _test_hu_cfg(args.in_dir[0], args.out_dir[0])

if __name__ == "__main__":
    main()
