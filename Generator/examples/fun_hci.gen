

// COMMAND COMMON

ENUM fun_admin_op
  FUN_ADMIN_OP_INVALID = 0x00
  FUN_ADMIN_OP_EPFN = 0x01 /* PCIe EndPoint Function Node */
  FUN_ADMIN_OP_EPCQ = 0x02 /* PCIe EndPoint Completion Queue Node */
  FUN_ADMIN_OP_EPSQ = 0x03 /* PCIe EndPoint Submission Queue Node */
  FUN_ADMIN_OP_EPRQ = 0x04 /* PCIe EndPoint Receive Queue Node */
  FUN_ADMIN_OP_ETH = 0x5 /* Ethernet processedsing Node */
  FUN_ADMIN_OP_VI = 0x6 /* Virtual Interface Node */
  FUN_ADMIN_OP_NSS = 0x7 /* NVMe SubSystem Node */
  FUN_ADMIN_OP_VOL = 0x8 /* Volume Node */
  FUN_ADMIN_OP_CRYPTO = 0x9 /* Crypto Node */
  FUN_ADMIN_OP_BIND = 0x20 /* Bind Nodes into Flow Graph */
END

ENUM fun_admin_req_common_flag
  FUN_ADMIN_REQ_COMMON_FLAG_RSP = 0x0001 /* Generate a Request Response Message */
  FUN_ADMIN_REQ_COMMON_FLAG_HEAD_WB = 0x0002 /* Generate a HEAD Write Back */ 
  FUN_ADMIN_REQ_COMMON_FLAG_INT = 0x0004 /* Generate an Interrupt after request has been processed */
END

STRUCT fun_admin_req_common
  0 63:56  uint8_t req_common_op /* see fun_admin_op enum */
  0 55:48  uint8_t req_common_len8 /* length of the request in units of 8-bytes */
  0 47:32 uint16_t req_common_flags /* see fun_admin_req_common flag enum */
  0 31:00 uint32_t rsvd0
  1 63:00 uint64_t req_common_cookie /* caller cookie, returned in response message */
END 

STRUCT fun_admin_rsp_common
  0 63:56  uint8_t rsp_common_op /* see fun_admin_op enum, copied from request */
  0 55:32  uint8_t rsvd0[3]
  0 31:00 uint32_t rsp_common_status /* status */
  1 63:00 uint64_t rsp_common_cookie  /* caller cookie, copied from request */
END 

ENUM fun_admin_subop
  FUN_ADMIN_SUBOP_INVALID = 0x00
  FUN_ADMIN_SUBOP_CREATE = 0x01
  FUN_ADMIN_SUBOP_DESTROY = 0x02
END

// AMDIN CMD EPCQ

ENUM fun_admin_epcq_create_flag
  FUN_ADMIN_EPCQ_CREATE_FLAG_ALLOCATOR = 0x01 /* Enable EPCQ ID allocator */
  FUN_ADMIN_EPCQ_CREATE_FLAG_INT_EPCQ = 0x02 /* Use a EPCQ as interrupt concentrator */
  FUN_ADMIN_EPCQ_CREATE_FLAG_ENTRY_WR_TPH = 0x04 /* Enable EPCQ entry write TPH */
  FUN_ADMIN_EPCQ_CREATE_FLAG_SL_WR_TPH = 0x08 /* Enable Scatter List write TPH */
END

STRUCT fun_admin_epcq_req
  0 63:00 fun_admin_req_common epcq_req_common 
  1 63:00 ...
  UNION epcq_req_subop u
    STRUCT fun_admin_epcq_req_create epcq_req_create
      2 63:56  uint8_t epcq_req_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t epcq_req_create_flag /* see fun_admin_epcq_create_flag enum */
      2 31:00 uint32_t epcq_req_create_id /* FLAG_ALLOCATOR=0: n/a, FLAG_ALLOCATOR=1: epcqid */
      3 63:48 uint16_t epcq_req_create_esize_log2 /* log2 of epcq entry size in bytes */
      3 47:32 uint16_t epcq_req_create_intid /* FLAG_INT_EPSQ=0: interrupt MSI/-X vectorid, FLAG_INT_EPSQ=1: interrupt concentrator epcqid */
      3 31:16 uint16_t epcq_req_create_nentries /* number of entries in epcq */
      3 15:00 uint16_t rsvd1
      4 63:00 uint64_t epcq_req_create_address /* DMA address of epcq */
    END
    STRUCT fun_admin_epcq_req_destroy epcq_destroy
      2 63:56  uint8_t epcq_req_destroy_subop /* FUN_ADMIN_SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t epcq_req_destroy_id /* epcqid to destroy */
    END      
  END
END

STRUCT fun_admin_epcq_rsp
  0 63:00 fun_admin_rsp_common epcq_rsp_common
  0 63:00 ...
  UNION epcq_rsp_subop u
    STRUCT fun_admin_epcq_rsp_create epcq_rsp_create
      2 63:56  uint8_t epcq_rsp_create_subop /* SUBOP_CREATE */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t epcq_rsp_create_id /* created epcqid if epcq_rsp_common.rsp_common_status = 0 or N/A */
    END
    STRUCT fun_admin_epcq_rsp_destroy epcq_destroy
      2 63:56  uint8_t epcq_rsp_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t epcq_rsp_destroy_id /* epcqid to destroy */
    END      
  END
END


// AMDIN CMD EPSQ

ENUM fun_admin_epsq_create_flag
  FUN_ADMIN_EPSQ_CREATE_FLAG_NONE = 0x00
  FUN_ADMIN_EPSQ_CREATE_FLAG_ALLOCATOR = 0x01 /* Enable EPSQ ID allocator */
  FUN_ADMIN_EPSQ_CREATE_FLAG_INT_EPSQ = 0x02 /* Use a EPSQ as interrupt concentrator */
  FUN_ADMIN_EPSQ_CREATE_FLAG_ENTRY_RD_TPH = 0x04 /* Enable EPSQ entry read TPH */
  FUN_ADMIN_EPSQ_CREATE_FLAG_GL_RD_TPH = 0x08 /* Enable Gather List read TPH */
  FUN_ADMIN_EPSQ_CREATE_FLAG_HEAD_WB_ADDRESS = 0x10 /* Enable HEAD WriteBack to address */
  FUN_ADMIN_EPSQ_CREATE_FLAG_HEAD_WB_ADDRESS_TPH = 0x20 /* Enable HEAD WriteBack TPH */
  FUN_ADMIN_EPSQ_CREATE_FLAG_HEAD_WB_EPCQ = 0x40 /* Enable HEAD WriteBack to EPCQ */
END

STRUCT fun_admin_epsq_req
  0 63:00 fun_admin_req_common epsq_req_common 
  1 63:00 ...
  UNION epsq_req_subop u
    STRUCT fun_admin_epsq_req_create epsq_req_create
      2 63:56  uint8_t epsq_req_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t epsq_req_create_flag /* see fun_admin_epsq_create_flag enum */
      2 31:00 uint32_t epsq_req_create_id /* FLAG_ALLOCATOR=0: n/a, FLAG_ALLOCATOR=1: epsqid */
      3 63:48 uint16_t epsq_req_create_entry_size_log2 /* log2 of epsq entry size in bytes */
      3 47:32 uint16_t epsq_req_create_intid /* FLAG_INT_EPSQ=0: interrupt MSI/-X vectorid, FLAG_INT_EPSQ=1: interrupt concentrator epcqid */
      3 31:16 uint16_t epsq_req_create_tph_cpuid /* CPUID for TPH */
      3 15:00 uint16_t epsq_req_create_nentries /* number of entries in epsq */
      4 63:00 uint64_t epsq_req_create_address /* DMA address of epsq */
      5 63:56  uint8_t epsq_req_create_head_wb_size_log2 /* log2 of head write back size */
      5 55:00  uint8_t rsvd1[7]
      6 63:00 uint64_t epsq_req_create_head_wb_address /* DMA address for head writeback */
    END
    STRUCT fun_admin_epsq_req_destroy epsq_req_destroy
      2 63:56  uint8_t epsq_req_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t epsq_req_destroy_id /* epsqid to destroy */
    END      
  END
END

STRUCT fun_admin_epsq_rsp
  0 63:00 fun_admin_rsp_common epsq_rsp_common
  0 63:00 ...
  UNION epsq_rsp_subop u
    STRUCT fun_admin_epsq_rsp_create epsq_rsp_create
      2 63:56  uint8_t epsq_rsp_create_subop /* SUBOP_CREATE */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t epsq_rsp_create_id /* created epsqid if epsq_rsp_common.rsp_common_status = 0 or N/A */
    END
    STRUCT fun_admin_epsq_rsp_destroy epsq_rsp_destroy
      2 63:56  uint8_t epsq_rsp_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t epsq_rsp_destroy_id /* epsqid to destroy */
    END      
  END
END

// ADMIN CMD EPRQ

STRUCT fun_admin_eprq_req
  0 63:00 fun_admin_req_common eprq_req_common 
  1 63:00 ...
  UNION eprq_req_subop u
    STRUCT fun_admin_eprq_req_create eprq_req_create
      2 63:56  uint8_t eprq_req_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t epsq_req_create_flag /* see fun_admin_eprq_create_flag enum */
      2 31:00 uint32_t eprq_req_create_eprqid /* FLAG_ALLOCATOR=0: n/a, FLAG_ALLOCATOR=1: eprqid */
      3 63:48 uint16_t eprq_req_create_esize_log2 /* log2 of eprq entry size in bytes */
      3 47:32 uint16_t eprq_req_create_intid /* associated interrupt MSI/-X vectorid or eprqid if FUN_AMDIN_CREATE_FLAG_INT_EPRQ */
      3 31:16 uint16_t eprq_req_create_nentries /* number of entries in eprq */
      3 15:00 uint16_t rsvd1
      4 63:00 uint64_t eprq_req_create_address /* DMA address of eprq */
    END
    STRUCT fun_admin_eprq_req_destroy eprq_req_destroy
      2 63:56  uint8_t eprq_req_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t eprq_req_destroy_eprqid /* eprqid to destroy */
    END      
  END
END

STRUCT fun_admin_eprq_rsp
  0 63:00 fun_admin_rsp_common eprq_rsp_common
  0 63:00 ...
  UNION eprq_rsp_subop u
    STRUCT fun_admin_eprq_rsp_create eprq_rsp_create
      2 63:56  uint8_t eprq_rsp_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t flags
      2 31:00 uint32_t eprq_rsp_create_eprqid /* created eprqid if eprq_rsp_common.rsp_common_status = 0 or N/A */
    END
    STRUCT fun_admin_eprq_rsp_destroy eprq_rsp_destroy
      2 63:56  uint8_t eprq_rsp_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t eprq_rsp_destroy_eprqid /* eprqid to destroy */
    END      
  END
END

// ADMIN CMD ETH

STRUCT fun_admin_eth_req
  0 63:00 fun_admin_req_common eth_req_common 
  1 63:00 ...
  UNION eth_req_subop u
    STRUCT fun_admin_eth_req_create eth_req_create
      2 63:56  uint8_t eth_req_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t epsq_req_create_flag /* see fun_admin_eth_create_flag enum */
      2 31:00 uint32_t eth_req_create_ethid /* FLAG_ALLOCATOR=0: n/a, FLAG_ALLOCATOR=1: ethid */
    END
    STRUCT fun_admin_eth_req_destroy eth_rsp_destroy
      2 63:56  uint8_t eth_req_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t eth_req_destroy_ethid /* ethid to destroy */
    END      
  END
END

STRUCT fun_admin_eth_rsp
  0 63:00 fun_admin_rsp_common eth_rsp_common
  0 63:00 ...
  UNION eth_rsp_subop u
    STRUCT fun_admin_eth_rsp_create eth_rsp_create
      2 63:56  uint8_t eth_rsp_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t flags
      2 31:00 uint32_t eth_rsp_create_ethid /* created ethid if eth_rsp_common.rsp_common_status = 0 or N/A */
    END
    STRUCT fun_admin_eth_rsp_destroy eth_rsp_destroy
      2 63:56  uint8_t eth_rsp_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t eth_rsp_destroy_ethid /* destroyed ethid */
    END      
  END
END

// ADMIN CMD VI

STRUCT fun_admin_vi_req
  0 63:00 fun_admin_req_common vi_req_common 
  1 63:00 ...
  UNION vi_req_subop u
    STRUCT fun_admin_vi_req_create vi_req_create
      2 63:56  uint8_t vi_req_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t epsq_req_create_flag /* see fun_admin_vi_create_flag enum */
      2 31:00 uint32_t vi_req_create_viid /* FLAG_ALLOCATOR=0: n/a, FLAG_ALLOCATOR=1: viid */
    END
    STRUCT fun_admin_vi_req_destroy vi_req_destroy
      2 63:56  uint8_t vi_req_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t vi_req_destroy_viid /* viid to destroy */
    END      
  END
END

STRUCT fun_admin_vi_rsp
  0 63:00 fun_admin_rsp_common vi_rsp_common
  0 63:00 ...
  UNION vi_rsp_subop u
    STRUCT fun_admin_vi_rsp_create vi_rsp_create
      2 63:56  uint8_t vi_rsp_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t flags
      2 31:00 uint32_t vi_rsp_create_viid /* vi_rsp_common.rsp_common_status=0: viid, otherwise: N/A */
    END
    STRUCT fun_admin_vi_rsp_destroy vi_rsp_destroy
      2 63:56  uint8_t vi_rsp_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t vi_rsp_destroy_viid /* destroyed viid */
    END      
  END
END

// ADMIN NSS CMD 

STRUCT fun_admin_nss_req
  0 63:00 fun_admin_req_common nss_req_common 
  1 63:00 ...
  UNION nss_req_subop u
    STRUCT fun_admin_nss_req_create nss_req_create
      2 63:56  uint8_t nss_req_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t epsq_req_create_flag /* see fun_admin_nss_create_flag enum */
      2 31:00 uint32_t nss_req_create_nssid /* FLAG_ALLOCATOR=0: n/a, FLAG_ALLOCATOR=1: nssid */
    END
    STRUCT fun_admin_nss_req_destroy nss_req_destroy
      2 63:56  uint8_t nss_req_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t nss_req_destroy_nssid /* nssid to destroy */
    END      
  END
END

STRUCT fun_admin_nss_rsp
  0 63:00 fun_admin_rsp_common nss_rsp_common
  0 63:00 ...
  UNION nss_rsp_subop u
    STRUCT fun_admin_nss_rsp_create nss_rsp_create
      2 63:56  uint8_t nss_rsp_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t flags
      2 31:00 uint32_t nss_rsp_create_nssid /* nss_rsp_common.rsp_common_status=0: nssid, otherwise: N/A */
    END
    STRUCT fun_admin_nss_rsp_destroy nss_rsp_destroy
      2 63:56  uint8_t nss_rsp_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t nss_rsp_destroy_nssid /* destroyed viid */
    END      
  END
END

// ADMIN VOL CMD 

STRUCT fun_admin_vol_req
  0 63:00 fun_admin_req_common vol_req_common 
  1 63:00 ...
  UNION vol_req_subop u
    STRUCT fun_admin_vol_req_create vol_req_create
      2 63:56  uint8_t vol_req_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t epsq_req_create_flag /* see fun_admin_vol_create_flag enum */
      2 31:00 uint32_t vol_req_create_volid /* FLAG_ALLOCATOR=0: n/a, FLAG_ALLOCATOR=1: volid */
    END
    STRUCT fun_admin_vol_req_destroy vol_req_destroy
      2 63:56  uint8_t vol_req_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t vol_req_destroy_volid /* volid to destroy */
    END      
  END
END

STRUCT fun_admin_vol_rsp
  0 63:00 fun_admin_rsp_common vol_rsp_common
  0 63:00 ...
  UNION vol_rsp_subop u
    STRUCT fun_admin_vol_rsp_create vol_rsp_create
      2 63:56  uint8_t vol_rsp_create_subop /* SUBOP_CREATE */
      2 55:48  uint8_t rsvd0
      2 47:32 uint16_t flags
      // vol_rsp_common.rsp_common_status=0: volid, otherwise: N/A
      2 31:00 uint32_t vol_rsp_create_volid
    END
    STRUCT fun_admin_vol_rsp_destroy vol_rsp_destroy
      2 63:56  uint8_t vol_rsp_destroy_subop /* SUBOP_DESTROY */
      2 55:32  uint8_t rsvd0[3]
      2 31:00 uint32_t vol_rsp_destroy_volid /* destroyed viid */
    END      
  END
END


// BIND

ENUM fun_admin_bind_type
  FUN_ADMIN_BIND_TYPE_INVALID = 0x00
  FUN_ADMIN_BIND_TYPE_EPCQ = 0x02
  FUN_ADMIN_BIND_TYPE_EPSQ = 0x03
  FUN_ADMIN_BIND_TYPE_EPRQ = 0x04
  FUN_ADMIN_BIND_TYPE_ETH = 0x5
  FUN_ADMIN_BIND_TYPE_VI = 0x6
  FUN_ADMIN_BIND_TYPE_NSS = 0x7
  FUN_ADMIN_BIND_TYPE_VOL = 0x8
  FUN_ADMIN_BIND_TYPE_CRYPTO = 0x9
END

ENUM fun_admin_bind_const
  FUN_ADMIN_BIND_FLOW_MAX = 4
END

STRUCT fun_admin_bind_req_entry
  0 63:56  uint8_t bind_req_type
  0 55:32  uint8_t rsvd0[3]
  0 31:00 uint32_t bind_req_id
END

STRUCT fun_admin_bind_req
  0 63:00 fun_admin_req_common bind_req_common 
  1 63:00 ...
  _ _:_ fun_admin_bind_req_entry bind_req_entry[0]
END

STRUCT fun_admin_bind_rsp
  0 63:00 fun_admin_rsp_common bind_rsp_common 
  1 63:00 ...
END

